{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\FLORI\\\\Documents\\\\nextjs\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-fetch';\n\nvar Simple = function Simple(_ref) {\n  var repo = _ref.repo;\n  Simple.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, repos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            repos = _context.sent;\n            console.log(repos);\n            return _context.abrupt(\"return\", repos);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 1\n    }\n  }, \"Ol\\xE1 Next Js\"), repo.length ? repo.map(function (repo) {\n    __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, repo.name);\n  }) : null);\n};\n\n_c = Simple;\nexport default Simple;\n\nvar _c;\n\n$RefreshReg$(_c, \"Simple\");","map":{"version":3,"sources":["C:/Users/FLORI/Documents/nextjs/pages/index.js"],"names":["React","Simple","repo","getInitialProps","fetch","response","json","repos","console","log","length","map","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAY;AAAA,MAAVC,IAAU,QAAVA,IAAU;AAEvBD,EAAAA,MAAM,CAACE,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,KAAK,CAAC,8CAAD,CAFP;;AAAA;AAEfC,YAAAA,QAFe;AAAA;AAAA,mBAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIfC,YAAAA,KAJe;AAMrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AANqB,6CAQdA,KARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFQ,EAOJL,IAAI,CAACQ,MAAL,GAEAR,IAAI,CAACS,GAAL,CAAS,UAAAT,IAAI,EAAI;AACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACU,IAAV;AACH,GAFD,CAFA,GAIK,IAXD,CADJ;AAqBH,CArCD;;KAAMX,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\n\r\nimport 'isomorphic-fetch'\r\n\r\n\r\nconst Simple = ({repo}) => {\r\n\r\n    Simple.getInitialProps = async () => {\r\n        \r\n        const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n     \r\n        const repos = await response.json()\r\n     \r\n        console.log(repos)\r\n     \r\n        return repos\r\n     }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n<h1>Ol√° Next Js</h1>\r\n\r\n\r\n{\r\n\r\n    repo.length ? \r\n\r\n    repo.map(repo => {\r\n        <h1>{repo.name}</h1>\r\n    }) : null\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Simple\r\n\r\n"]},"metadata":{},"sourceType":"module"}