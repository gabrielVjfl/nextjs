{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\FLORI\\\\Documents\\\\nextjs\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-fetch';\n\nvar Simple = function Simple(_ref) {\n  var repos = _ref.repos;\n  Simple.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response, repos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.github.com/orgs/rocketseat/repos\");\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            repos = _context.sent;\n            console.log(repos);\n            return _context.abrupt(\"return\", {\n              repos: repos\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, repos.map(function (repos) {\n    __jsx(\"h1\", {\n      key: repos.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, repos.name);\n  }));\n};\n\n_c = Simple;\nexport default Simple;\n\nvar _c;\n\n$RefreshReg$(_c, \"Simple\");","map":{"version":3,"sources":["C:/Users/FLORI/Documents/nextjs/pages/index.js"],"names":["React","Simple","repos","getInitialProps","fetch","response","json","console","log","map","id","name"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,kBAAP;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAExBD,EAAAA,MAAM,CAACE,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,KAAK,CAAC,8CAAD,CAFP;;AAAA;AAEfC,YAAAA,QAFe;AAAA;AAAA,mBAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIfJ,YAAAA,KAJe;AAMrBK,YAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AANqB,6CAQd;AAACA,cAAAA,KAAK,EAALA;AAAD,aARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;AAcA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOJA,KAAK,CAACO,GAAN,CAAU,UAAAP,KAAK,EAAI;AACf;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBR,KAAK,CAACS,IAA1B;AACH,GAFD,CAPI,CADJ;AAmBH,CAnCD;;KAAMV,M;AAsCN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\n\r\nimport 'isomorphic-fetch'\r\n\r\n\r\nconst Simple = ({repos}) => {\r\n\r\n    Simple.getInitialProps = async () => {\r\n\r\n        const response = await fetch(\"https://api.github.com/orgs/rocketseat/repos\")\r\n     \r\n        const repos = await response.json()\r\n     \r\n        console.log(repos)\r\n     \r\n        return {repos}\r\n     }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n\r\n\r\n\r\n{\r\n\r\n    repos.map(repos => {\r\n        <h1 key={repos.id}>{repos.name}</h1>\r\n    }) \r\n}\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Simple\r\n\r\n"]},"metadata":{},"sourceType":"module"}